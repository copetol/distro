#!/bin/bash

pushd /sys/class/net
ifsa=(*)
popd
declare -A ifdict
ifsd=""

#ipa=`ip -4 a | grep -v "valid_lft" | cut -d ' ' -f 2,6,9`
n=0
for (( i=0; i<${#ifsa[@]}; i++ )); do
  ifname="${ifsa[$i]}"
  if [[ "$ifname" != "lo" ]]; then
    ifdict[$n'name']=$ifname
    ifdict[$n'nameold']=$ifname
    ifdict[$n'ip']=`ip -4 -o addr show $ifname | awk '{print $4}' | cut -d "/" -f 1 | tr "\n" " "`
    ifdict[$n'gw']=`ip route | grep -E "default.*$ifname" | awk '{print $3}'`
    mac=`cat /sys/class/net/$ifname/address`
    ifdict[$n'mac']=$mac
    ifsd=${ifsd}$n' '$ifname' '
    n=$((n+1))
  fi
done

changes=""
while :; do
option=`whiptail --cancel-button "Выход" --notags --title "Настройки" --default-item "$main_item"  --menu "\n" 13 66 5 "1" "Сетевые интерфейсы" "2" "PTP сервис" "3" "RTM сервис"  3>&1 1>&2 2>&3`
if [ $? = 0 ];  then main_item=$option; else  break; fi
case $main_item in
  1)
  while [[ $main_item != 0 ]]; do
    option=`whiptail --cancel-button "Назад" --notags --title "Выбор сетевого интерфейса" --default-item "$cur_if_n" --menu "\n" 13 66 5  $ifsd  3>&1 1>&2 2>&3`
    if [ $? = 0 ];  then cur_if_n=$option;cur_if=${ifdict[$option'name']}; else main_item=0;break; fi
    while [[ $cur_if != "" ]]; do
      status=`cat /sys/class/net/${ifdict[$cur_if_n'nameold']}/operstate`
      option=`whiptail --cancel-button "Назад" --notags --title "Действия с интерфейсом $cur_if" --backtitle="Подключение к сети: $status" --default-item "$if_item_cur" --menu "\n" 13 66 5 "1" "Переименовать" "2" "Добавить IP адрес" "3" "Удалить IP адрес" "4" "Указать основной шлюз"  3>&1 1>&2 2>&3`
      if [ $? = 0 ];  then if_item=$option;if_item_cur=$option; else cur_if=""; fi
      while [[ $if_item != "" ]]; do
        case $if_item in
          1)
          option=`whiptail --cancel-button "Назад" --title "Переименовать интерфейс $cur_if" --backtitle="Старое имя: ${ifdict[$cur_if_n'nameold']}" --inputbox "\nНовое имя интерфейса" 13 66 3>&1 1>&2 2>&3`
          if [ $? = 0 ]; then
            cur_if=$option; ifdict[$cur_if_n'name']=$option;
            ifsd=""
            for (( i=0; i<$n; i++ )); do
              ifname=${ifdict[$i'name']}
              ifsd=${ifsd}$i' '$ifname' '
            done
          changes=$changes"    Изменено имя интерфейса: "$option"\n"
          fi;
          if_item="";
          ;;
          2)
          #echo ${ifdict[$cur_if_n'ip']}
          option=`whiptail --cancel-button "Назад" --title "Добавить IP адрес к интерфейсу $cur_if" --backtitle="IP: ${ifdict[$cur_if_n'ip']}" --inputbox "\nДобавить IP адрес" 13 66 3>&1 1>&2 2>&3`
          if [ $? = 0 ]; then
            ifdict[$cur_if_n'ip']+=" "$option;
            changes=$changes"    Добавлен IP: "$option"\n"
          fi;
          if_item="";
          ;;
          3)
          ipdoubled=""; for i in ${ifdict[$cur_if_n'ip']};do ipdoubled=$ipdoubled' '$i' '$i; done
          option=`whiptail --cancel-button "Назад" --notags --title "Удалить IP адрес" --backtitle="IP: ${ifdict[$cur_if_n'ip']}" --menu "\n" 13 66 5 $ipdoubled  3>&1 1>&2 2>&3`
          if [ $? = 0 ]; then
            tmpvar=${ifdict[$cur_if_n'ip']}
            ifdict[$cur_if_n'ip']=${tmpvar//$option/};
            changes=$changes"    Удален IP: "$option"\n"
          fi;
          if_item="";
          ;;
          4)
          option=`whiptail --cancel-button "Назад" --title "Задать основной шлюз $cur_if" --backtitle="Шлюз: ${ifdict[$cur_if_n'gw']}" --inputbox "\nУказать основной шлюз" 13 66 3>&1 1>&2 2>&3`
          if [ $? = 0 ]; then
            ifdict[$cur_if_n'gw']=$option;
            changes=$changes"    Задан шлюз: "$option"\n"
          fi;
          if_item="";
          ;;
          *)
          ;;
        esac
        done
      done
    done
    ;;
  2)
  #ptp
  ptp_cfg=/etc/ptpd2.conf
  ptp_re=""
  while : ; do
      option=`whiptail --cancel-button "Назад" --notags --title "Настройки PTP" --default-item "$ptp_item" --menu "\n" 13 66 5 "1" "Основной интерфейс" "2" "Резервный интерфейс" "3" "Механизм измерения задержек"  3>&1 1>&2 2>&3`
      if [ $? = 0 ]; then
        ptp_item=$option
        case $ptp_item in
          1)
          option=`whiptail --cancel-button "Отмена" --notags --title "Задать основной интерфейс для PTP" --menu "\n" 13 66 5 $ifsd 3>&1 1>&2 2>&3`
          if [ $? = 0 ]; then
            sed -i "s/ptpengine:interface\s*=\s*.*/ptpengine:interface = \"${ifdict[$option'name']}\"/" $ptp_cfg
            ptp_re=$ptp_re"\nОсновной интерфейс: "${ifdict[$option'name']}
          fi
          ;;
          2)
          option=`whiptail --cancel-button "Отмена" --notags --title "Задать резервный интерфейс для PTP" --backtitle "Основной интерфейс для PTP: ${ifdict[$option'name']}" --menu "\n" 13 66 5 $ifsd 3>&1 1>&2 2>&3`
          if [ $? = 0 ]; then
            sed -i "s/ptpengine:interface\s*=\s*.*/ptpengine:interface = \"${ifdict[$option'name']}\"/" $ptp_cfg
            ptp_re=$ptp_re"\nРезервный интерфейс: "${ifdict[$option'name']}
          fi
          ;;
          3)
          option=`whiptail --cancel-button "Отмена" --notags --title "Задать механизм измерения задержек" --menu "\n" 13 66 5 "E2E" "E2E" "P2P" "P2P" "DELAY_DISABLED" "Disabled" 3>&1 1>&2 2>&3`
          if [ $? = 0 ]; then
            sed -i "s/ptpengine:delay_mechanism\s*=\s*.*/ptpengine:delay_mechanism = $option/" $ptp_cfg
            ptp_re=$ptp_re"\nМеханизм измерения задержек: "$option
          fi
          ;;
        esac
      else
        break
      fi
  done
  if [ ! -z "$ptp_re" ]; then
    systemctl restart ptpd &
    whiptail --title "Сервис PTP будет перезапущен" --msgbox "\n$ptp_re" 13 66
    #{
    #for (( i=1; i<100; i+=20 ));do
    #  sleep 1
    #  systemctl is-active --quiet ptpd
    #  if [ $? = 0 ]; then echo 100; break; else echo $i; fi
    #done
    #} | whiptail --gauge "Перезапуск PTP сервиса\n$ptp_re" 13 66 1
  fi
  ;;
  3)
  # rtm
  ipdoubled="";
  for(( j=0;j<n; j++ )); do
    for i in ${ifdict[$j'ip']};do ipdoubled=$ipdoubled' '$i' ('${ifdict[$j'name']}')'$i; done
  done
  rtm_cfg=/opt/rtm/config.cfg
  rtm_re=""
  while : ; do
      option=`whiptail --cancel-button "Назад" --notags --title "Настройки РТМ" --default-item "$ptp_item" --menu "\n" 13 66 5 "1" "IP-адрес" "2" "Broadcast-адрес" "3" "Имя"  3>&1 1>&2 2>&3`
      if [ $? = 0 ]; then
        ptp_item=$option
        case $ptp_item in
          1)
          option=`whiptail --cancel-button "Отмена" --notags --title "Задать IP-адрес для РТМ" --menu "\n" 13 66 5 $ipdoubled 3>&1 1>&2 2>&3`
          if [ $? = 0 ]; then
            sed -i "s/ip\s*=\s*.*/ip = \"$option\"/" $rtm_cfg
            rtm_re=$rtm_re"\nIP-адрес: "$option
          fi;
          ;;
          2)
          option=`whiptail --cancel-button "Отмена" --title "Задать Broadcast-адрес" --inputbox "\n" 13 66 192.168.31.255 3>&1 1>&2 2>&3`
          if [ $? = 0 ]; then
            sed -i "s/broadcast_addr\s*=\s*.*/broadcast_addr = \"$option\"/" $rtm_cfg
            rtm_re=$rtm_re"\nBroadcast-адрес: "$option
          fi
          ;;
          3)
          option=`whiptail --cancel-button "Отмена" --title "Задать имя для РТМ" --inputbox "\n" 13 66  3>&1 1>&2 2>&3`
          if [ $? = 0 ]; then
            sed -i "s/name\s*=\s*.*/name = \"$option\"/" $rtm_cfg
            rtm_re=$rtm_re"\nИмя: "$option
          fi
          ;;
        esac
      else
        break
      fi
  done
  if [ ! -z "$rtm_re" ]; then
    whiptail --title "Сервис PTM будет перезапущен" --msgbox "\n$rtm_re" 13 66
    systemctl restart tsep.rtmb
    systemctl restart tsep.rtmd
  fi
  ;;
esac
done

if [[ $changes != "" ]]; then
  whiptail --yes-button "Записать" --no-button "Выйти не сохраняя" --title "Записать изменения?" --backtitle="После сохранения изменений сервер будет перезагружен" --yesno --scrolltext "Были внесены изменения:\n\n$changes" 13 66 5 3>&1 1>&2 2>&3
  if [ $? = 0 ]; then
  for cfgfile in "/etc/netplan"/*
    do
      cp $cfgfile $cfgfile'.bk'
echo 'network:
  version: 2
  renderer: networkd
  ethernets:' > $cfgfile
for (( i=0; i<$n; i++ )); do
echo '    '${ifdict[$i'nameold']}':
      match:
        macaddress: '${ifdict[$i'mac']}'
      set-name: '${ifdict[$i'name']} >> $cfgfile
tmpvar=${ifdict[$i'ip']}
if [[ ! -z ${tmpvar// } ]]; then 
echo '      addresses:' >> $cfgfile
  for ip in ${ifdict[$i'ip']}; do
    echo '        - '$ip'/24' >> $cfgfile
  done
fi
tmpvar=${ifdict[$i'gw']}
if [[ ! -z $tmpvar ]]; then
  echo '      gateway4: '$tmpvar >> $cfgfile
fi
done
      break
    done
netplan apply
reboot
  fi
fi

